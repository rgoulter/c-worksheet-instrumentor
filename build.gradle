plugins {
  id 'java'
  id 'scala'
  id 'antlr'
  id 'application'
  id 'com.github.maiflai.scalatest' version '0.32'
}

group = 'edu.nus'
version = file('version').text.trim()

base {
  archivesName = 'worksheetify.instrumentor'
}

application {
  mainClass = 'edu.nus.worksheet.Worksheetify'
}

repositories {
    mavenCentral()
}

def hasExeOnPath(program) {
    def pathEntries = System.getenv('PATH').split(File.pathSeparator)

    def programOnPath = pathEntries.find { entry ->
        def isExeOnPath = { p -> java.nio.file.Files.isExecutable(java.nio.file.Paths.get(entry, p)) }
        isExeOnPath(program) || isExeOnPath("${program}.exe")
    }
}

def hasGCC = hasExeOnPath('gcc')
def hasClang = hasExeOnPath('clang')

dependencies {
    implementation 'org.scala-lang:scala3-library_3:3.4.2'
    implementation 'io.argonaut:argonaut_3:6.2.6'

    implementation 'org.antlr:antlr4-runtime:4.5'
    implementation 'org.antlr:ST4:4.0.8'

    testImplementation 'org.scalatest:scalatest_3:3.2.17'
    testImplementation 'com.vladsch.flexmark:flexmark-all:0.64.8'

    antlr 'org.antlr:antlr4:4.5'
}

generateGrammarSource {
    arguments += ['-visitor', '-package', 'edu.nus.worksheet.instrumentor']
}

task testGcc(type: Test) {
    onlyIf { hasGCC }
    maxParallelForks = 1
    tags {
        exclude 'edu.nus.worksheet.instrumentor.tags.IntegrationTest'
        include 'edu.nus.worksheet.tags.UsesGCC'
    }
}

task testClang(type: Test) {
    onlyIf { hasClang }
    maxParallelForks = 1
    tags {
        exclude 'edu.nus.worksheet.instrumentor.tags.IntegrationTest'
        include 'edu.nus.worksheet.tags.UsesClang'
    }
}

test {
    dependsOn testGcc
    dependsOn testClang
    maxParallelForks = 1
    tags {
        exclude 'edu.nus.worksheet.instrumentor.tags.IntegrationTest'
        exclude 'edu.nus.worksheet.tags.UsesClang'
        exclude 'edu.nus.worksheet.tags.UsesGCC'
    }
}

task testIntegration(type: Test) {
    dependsOn installDist
    maxParallelForks = 1
    tags {
        include 'edu.nus.worksheet.instrumentor.tags.IntegrationTest'
    }
}

jar {
    manifest {
        attributes(
            'Bundle-Version': '0.1.0.qualifier',
            'Export-Package': 'edu.nus.worksheet, edu.nus.worksheet.instrumentor, edu.nus.worksheet.instrumentor.templates'
        )
    }
}

task worksheetifyServerStartScripts(type: CreateStartScripts) {
    mainClass = 'edu.nus.worksheet.WorksheetifyServer'
    applicationName = 'c-worksheetify-server'
    outputDir = file("$buildDir/scripts")
    classpath = jar.outputs.files + configurations.runtimeClasspath
}

distTar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

distZip {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

installDist {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

distributions {
    main {
        contents {
            into('bin') {
                from(worksheetifyServerStartScripts) {
                    fileMode 0755
                }
            }
        }
    }
}
